services:
  authelia:
    image: authelia/authelia:latest
    container_name: authelia
    restart: unless-stopped
    volumes:
      - ./authelia/config:/config
      - ./authelia/secrets:/secrets:ro
    environment:
      - TZ=UTC
      - AUTHELIA_JWT_SECRET_FILE=/secrets/jwt_secret
      - AUTHELIA_SESSION_SECRET_FILE=/secrets/session_secret
      - AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE=/secrets/storage_encryption_key
    labels:
      - "traefik.enable=true"
      # Authelia portal
      - "traefik.http.routers.authelia.rule=Host(`auth.tdlx.nl`)"
      - "traefik.http.routers.authelia.entrypoints=websecure"
      - "traefik.http.routers.authelia.tls.certresolver=myresolver"
      - "traefik.http.routers.authelia.priority=20"
      - "traefik.http.services.authelia.loadbalancer.server.port=9091"
      # Forward auth middleware
      - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/authz/forward-auth"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Email,Remote-Name"
    networks:
      - proxy

  api:
    build: .
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./data:/tmp
      - ./firmware:/home/cumulus/github/energy_pebble/firmware
    labels:
      - "traefik.enable=true"
      # Protected API routes (user, firmware, admin, and auth endpoints)  
      - "traefik.http.routers.energypebble-api-auth.rule=Host(`energypebble.tdlx.nl`) && (PathPrefix(`/api/user`) || PathPrefix(`/api/firmware`) || PathPrefix(`/api/admin`) || PathPrefix(`/api/verify`))"
      - "traefik.http.routers.energypebble-api-auth.entrypoints=websecure"
      - "traefik.http.routers.energypebble-api-auth.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-api-auth.priority=15"
      - "traefik.http.routers.energypebble-api-auth.middlewares=authelia@docker,real-ip"
      # Firmware download routes (open to all)
      - "traefik.http.routers.energypebble-firmware.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/firmware`)"
      - "traefik.http.routers.energypebble-firmware.entrypoints=websecure"
      - "traefik.http.routers.energypebble-firmware.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-firmware.priority=12"
      - "traefik.http.routers.energypebble-firmware.middlewares=real-ip"
      # Public API routes (everything else)
      - "traefik.http.routers.energypebble-api.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/api`)"
      - "traefik.http.routers.energypebble-api.entrypoints=websecure"
      - "traefik.http.routers.energypebble-api.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-api.priority=10"
      - "traefik.http.routers.energypebble-api.middlewares=real-ip"
      # Docs routes
      - "traefik.http.routers.energypebble-docs.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/docs`)"
      - "traefik.http.routers.energypebble-docs.entrypoints=websecure"
      - "traefik.http.routers.energypebble-docs.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-docs.priority=15"
      - "traefik.http.routers.energypebble-docs.service=energypebble-api"
      # OpenAPI routes
      - "traefik.http.routers.energypebble-openapi.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/openapi.json`)"
      - "traefik.http.routers.energypebble-openapi.entrypoints=websecure"
      - "traefik.http.routers.energypebble-openapi.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-openapi.priority=15"
      - "traefik.http.routers.energypebble-openapi.service=energypebble-api"
      - "traefik.http.services.energypebble-api.loadbalancer.server.port=8000"
      # Real IP middleware to forward client IP  
      - "traefik.http.middlewares.real-ip.headers.customrequestheaders.X-Forwarded-Proto=https"
    networks:
      - proxy

  web:
    image: caddy:2-alpine
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./static:/usr/share/caddy
    labels:
      - "traefik.enable=true"
      # Protected routes (dashboard)
      - "traefik.http.routers.energypebble-web-auth.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.energypebble-web-auth.entrypoints=websecure"
      - "traefik.http.routers.energypebble-web-auth.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-web-auth.middlewares=authelia@docker"
      - "traefik.http.routers.energypebble-web-auth.priority=10"
      # Protected routes (impact-circle)
      - "traefik.http.routers.energypebble-web-impact.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/impact-circle`)"
      - "traefik.http.routers.energypebble-web-impact.entrypoints=websecure"
      - "traefik.http.routers.energypebble-web-impact.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-web-impact.middlewares=authelia@docker"
      - "traefik.http.routers.energypebble-web-impact.priority=10"
      # Protected routes (admin area)
      - "traefik.http.routers.energypebble-web-admin.rule=Host(`energypebble.tdlx.nl`) && PathPrefix(`/admin`)"
      - "traefik.http.routers.energypebble-web-admin.entrypoints=websecure"
      - "traefik.http.routers.energypebble-web-admin.tls.certresolver=myresolver"
      - "traefik.http.routers.energypebble-web-admin.middlewares=authelia@docker"
      - "traefik.http.routers.energypebble-web-admin.priority=11"
      # Public routes (everything else)
      - "traefik.http.routers.energypebble-web.rule=Host(`energypebble.tdlx.nl`)"
      - "traefik.http.routers.energypebble-web.entrypoints=websecure"
      - "traefik.http.routers.energypebble-web.tls.certresolver=myresolver"
      - "traefik.http.services.energypebble-web.loadbalancer.server.port=80"
      - "traefik.http.routers.energypebble-web.priority=1"
    networks:
      - proxy
    depends_on:
      - authelia

networks:
  proxy:
    driver: bridge
    external: true
      
